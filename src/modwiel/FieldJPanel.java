/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modwiel;

import modwiel.model.Field;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author student
 */
public class FieldJPanel extends javax.swing.JPanel {
    
    public static interface OnClick{
        public void onClick( int i , int y );
    }
    
    private int size = 20;
    private int boxSize = 20;
    private int padding = 2;
    
    private int[][] data;
    
    private OnClick listener;
    
    public void setListener(OnClick listener){
        this.listener =listener;
    }
    /**
     * Creates new form FieldJPanel
     */
    public FieldJPanel() {
        initComponents(); 
        //setPreferredSize(new Dimension(300, 300));
        data = new int[size][size];
        addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                int i = (me.getX()-padding)/((int)(boxSize+padding/2.0));
                int j = (me.getY()-padding)/((int)(boxSize+padding/2.0));
                if(listener!=null){
                    listener.onClick(i, j);
                }
            }
        });
    }
     
    public void refreshData( int[][] data ){
        this.data = data; 
        repaint();
    }
     
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        //System.err.println("paintComponent");
        g.setColor(Color.RED);
        g.fillRect( 0 , 0 , (int)(size*(boxSize+padding/2.0))+2*padding, (int)(size*(boxSize+padding/2.0))+2*padding);
        
        for(int i = 0 ; i < data.length ; i++){
            for(int j = 0 ; j < data[i].length ; j++){
                if( data[i][j] == Field.ALIVE ){
                    g.setColor(Color.yellow);
                }else{
                    g.setColor(Color.black);
                }
                g.fillRect( (int)(padding+i*(boxSize+padding/2.0)) , (int)(padding+j*(boxSize+padding/2.0)), boxSize, boxSize);
            }
        }
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
